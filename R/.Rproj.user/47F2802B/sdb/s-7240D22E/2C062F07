{
    "contents" : "##########################################################################\n# RANDOM FOREST MODEL AND RASTER PREDICTION\n##########################################################################\n# CONTACT:\n#     Jeffrey S. Evans\n#     Senior Landscape Ecologist  \n#     The Nature Conservancy\n#     Central Science/DbyD\n#     Laramie, WY 82070 \n#     jeffrey_evans@tnc.org\n#     (970) 672-6766\n##########################################################################\nrequire(randomForest)\nrequire(raster)\nrequire(rgdal)\nrequire(raster)\npath=\"D:/IALE2013_WORKSHOP/PARTITIONING/RFLAB\"\nsource(paste(paste(path, \"CODE\", sep=\"/\"), \"functions.R\", sep=\"/\"))\n\n# Training data\ninshape=\"PresAbs\"\n\n# NUMBER OF BOOTSTRAP REPLICATES\nb=1001 \n\n##########################################################################\n# CREATE TRANING DATA\n##########################################################################\n# READ AND CHECK RASTERS, CREATE RASTER STACK\nrlist=list.files(paste(path, \"DATA\", sep=\"/\"), pattern=\"img$\", full.names=TRUE) \n  rlist <- rlist[-c(1,9,10,12,14,16,18)]\n              \n  r.info <- as.data.frame(array(0, dim=c( 0, 11)))\n    names(r.info) <- c(\"RASTER\", \"MIN\", \"MAX\", \"ROWS\", \"COLS\", \"NCELLS\", \"CELLSIZE\", \"\n                        XMIN\", \"XMAX\", \"YMIN\", \"YMAX\")\n  for (i in rlist ) { \n    r <- raster(i) \n      e <- extent(r)\n      rsum <- data.frame(RASTER=i, MIN=minValue(r), MAX=maxValue(r), \n                         ROWS=nrow(r), COLS=ncol(r), NCELLS=ncell(r), \n\t  \t\t\t\t\t CELLSIZE=res(r)[1], XMIN=e@xmin, XMAX=e@xmax, \n\t  \t\t\t\t\t YMIN=e@ymin, YMAX=e@ymax)\n      r.info <- rbind(rsum, r.info)\t\t\t\t\t\t   \n        }\n# write.csv(r.info, \"RasterSummaries.csv\", row.names=FALSE)\n\n# CREATE RASTER STACK\nxvars <- stack(rlist)      \n  \n# READ SPECIES OBSERVATION DATA\nsdata <- readOGR(dsn=paste(path, \"DATA\", sep=\"/\"), layer=inshape)\n  str(sdata@data)\n  \n# FETCH RASTER VALUES FOR X VARABLES AND JOIN TO SPECIES OBSERVATION DATA\nsdata@data <- data.frame(sdata@data, extract(xvars, sdata))\n  str(sdata@data)  \n\n# ITTERATIVE TEST FOR MULTI-COLINEARITY\ncl <- MultiColinear(sdata@data[,3:ncol(sdata@data)], p=0.05)\n xdata <- sdata@data[,3:ncol(sdata@data)]  \n  for(l in cl) {\n    cl.test <- xdata[,-which(names(xdata)==l)]\n\t  print(paste(\"REMOVE VARIABLE\", l, sep=\": \"))\n    MultiColinear(cl.test, p=0.05)\t\n  }\n\n# REMOVE MULTI-COLINEAR VARIABLES\nfor(l in cl) { sdata@data <- sdata@data[,-which(names(sdata@data)==l)] }\n\n##########################################################################\n# RANDOM FORESTS CLASSIFICATION MODEL\n##########################################################################\n# CREATE X,Y DATA\nydata <- as.factor(sdata@data[,\"Present\"])\nxdata <- sdata@data[,3:ncol(sdata@data)]\n\n# PERCENT OF PRESENCE OBSERVATIONS\n( dim(sdata[sdata$Present == 1, ])[1] / dim(sdata)[1] ) * 100\n\n# RUN RANDOM FORESTS MODEL SELECTION FUNCTION\n( rf.model <- rf.modelSel(x=xdata, y=ydata, imp.scale=\"mir\", ntree=b) ) \n\n# CREATE NEW XDATA BASED ON SELECTED MODEL AND RUN FINAL RF MODEL\nsel.vars <- rf.model$PARAMETERS[[4]]\n  rf.data <- data.frame(y=ydata, xdata[,sel.vars])\t\n( rf.final <- randomForest(y=rf.data[,1], x=rf.data[,2:ncol(rf.data)], ntree=b, \n                           importance=TRUE, norm.votes=TRUE, proximity=TRUE) )\n\n\t\t\t\t\t    \n# PLOT BOOTSTRAP ERROR CONVERGENCE\nplot(rf.final, main=\"Bootstrap Error Convergence\")\n\n# PLOT VARIABLE IMPORTANCE\n  p <- as.matrix(rf.final$importance[,3])    \n    ord <- rev(order(p[,1], decreasing=TRUE)[1:dim(p)[1]])  \n  dotchart(p[ord,1], main=\"Scaled Variable Importance\", pch=19)\t\t\t\t\t\t     \n\n###################################################  \n# PREDICT MODEL PROBABILITIES RASTER\n###################################################\npredict()\n  \n###################################################\n# PARTIAL PLOTS WITH LOESS SMOOTHING\n###################################################\nsp=0.80\npdf(paste(path,\"PartialPlots.pdf\", sep=\"/\"), width=8, height=8)\n  for (i in 1:length(names(rf.data[,2:ncol(rf.data)])) ) {\n    p <- partialPlot(rf.final, rf.data[,2:ncol(rf.data)], \n       names(rf.data[,2:ncol(rf.data)])[i], which.class=\"1\", plot=FALSE)   \n    p$y <- (p$y - min(p$y)) / (max(p$y) - min(p$y)) \n plot( y=lowess(y=p$y, x=p$x, f=sp)$y, x=p$x, type=\"l\", ylab=\"p\",  \n         xlab=names(rf.data[,2:ncol(rf.data)])[i],\n         main=paste(\"PARTIAL PLOT\", names(rf.data[,2:ncol(rf.data)])[i], sep=\" - \")) \n  }\ndev.off() \n\n###################################################\t   \n# BIVARIATE KERNEL DENSITY ESTIMATE \n###################################################\nrequire(ks)\nks.data <- data.frame(p=rf.prob[,2], map=xdata[,\"map30\"])\n   H.scv <- Hscv(x=ks.data)\n   fhat <- kde(x=ks.data, H=H.scv)\nplot(fhat, display=\"persp\", border=NA, col=\"grey96\", shade=0.75)\n\n###################################################\n# SAVE R IMAGE \nsave.image( paste(path, \"RFModel.RData\", sep=\"/\") ) \n###################################################\n\n# PLOT PROTOTYPES (MULTIVARIATE CLASS CENTERS)\t\t\t\t\t  \nrf.p <- classCenter(xdata, ydata, rf.final$prox)\nv1=8; v2=9\nplot(xdata[,v1], xdata[,v2], pch=21, xlab=names(xdata)[v1], ylab=names(xdata)[v2],\n     bg=c(\"red\", \"blue\", \"green\")[as.numeric(factor(ydata))], main=\"Data with Prototypes\")\n    points(rf.p[,v1], rf.p[,v2], pch=21, cex=2.5, bg=c(\"red\", \"blue\", \"green\"))\t\t\t\t\t  \n\n###################################################\n# MULTIDIMENSIONAL SCALING (MDS) PLOTS\n###################################################\n\n# FUNCTION TO CREATE COLOR VECTOR\ncRamp <- function(x,d=c(\"blue\", \"red\")){\n  crange <- function(x)(as.numeric(x)-min(as.numeric(x)))/diff(range(as.numeric(x)))\n    cols <- colorRamp(d)(crange(x))\n  apply(cols, 1, function(xt)rgb(xt[1], xt[2], xt[3], maxColorValue=255))\n}  \n\n# CREATE CMD SCALED DISTANCES OF RF PROXMITIES\nrf.cmd <- cmdscale(1 - rf.final$proximity, eig=TRUE, k=4)  \n  # pa.col = ifelse(ydata == \"1\", \"red\", ifelse(ydata == \"0\", \"black\", NA))\n  pa.col <- cRamp(ydata)  \n    rf.cmd <- data.frame(rf.cmd$points)\n\n# 2D PLOT OF FIRST TWO MDS DIMENSIONS\t\nplot(rf.cmd[,1:2], ylab=\"DIM 1\", xlab=\"DIM 2\", pch=16, col=pa.col,\n      main= paste(\"Pres/Abs\", \"PROXIMITY MATRIX MDS d=2\", sep=\" - \"))\n  legend(\"bottomleft\",pch=c(16,16), col=c(\"black\", \"red\"), \n         legend=c(\"Absent\",\"Present\")) \n\n# 3D PLOT OF FIRST THREE MDS DIMENSIONS\t\nrequire(rgl)\t   \n  plot3d(rf.cmd[,1],rf.cmd[,2],rf.cmd[,3], col=pa.col,\n         pch=18, size=1.25, type=\"s\", xlab=\"MDS dim 1\", ylab=\"MDS dim 2\", \n\t       zlab=\"MDS dim 3\")\t\n\t\t   \n",
    "created" : 1375712594654.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2334338311",
    "id" : "2C062F07",
    "lastKnownWriteTime" : 1375713035,
    "path" : "C:/Share/tcormier/scripts/R/RF_CLASS_MODEL.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}